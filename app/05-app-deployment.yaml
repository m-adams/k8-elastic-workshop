apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: workshop-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workshop-app
  template:
    metadata:
      labels:
        app: workshop-app
    spec:
      containers:
      - image: adamquan/beats-demo-app
        imagePullPolicy: Always
        name: app
        resources:
          limits:
            cpu: 200m
        env:
        # See https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/
        - name: APM_SERVER_HOST 
          valueFrom:
            fieldRef:
              #fieldPath: spec.nodeName
              fieldPath: status.hostIP
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: workshop-app
              key: MYSQL_PASSWORD
        ports:
        # Assign a name to the port so that we can refer to it by name in the service.
        # Named ports enables us to change the port number later without having to 
        # change the service spec
        - name: app-port 
          containerPort: 8081
---
# Create tables on first run
apiVersion: batch/v1
kind: Job
metadata:
  name: workshop-app-app-init
spec:
  activeDeadlineSeconds: 300
  template:
    metadata:
      labels:
        app: workshop-app
    spec:
      restartPolicy: Never
      containers:
      - name: app
        image: adamquan/beats-demo-app
        command: ["django-admin",  "migrate"]
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: workshop-app
              key: MYSQL_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: workshop-app
  labels:
    app: workshop-app
spec:
  type: NodePort
  # loadBalancerIP: 35.184.104.118
  # Avoid NAT to get source IP:
  externalTrafficPolicy: Local
  ports:
  - port: 80
    targetPort: app-port
  selector:
    app: workshop-app

